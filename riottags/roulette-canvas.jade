roulette-canvas
  canvas(name="thecanvas" )
  ul
    li(each="{this.forceHistory}") time:{this.time} value:{this.value}

  input(type="submit" onclick="{replay}" value="再生")
      

  script.
    var canvas = this.thecanvas;

    
    var width  = canvas.width  = 800;
    var height = canvas.height = 800;

    var c = canvas.getContext("2d");

    var roulette = new Roulette(Math.PI);

    var rouletteFinger = new RouletteFinger(roulette, {
      center: new Vec2(width/2, height/2),
      radius: width * 0.9 /2
    });

    var rouletteView = new RouletteView(roulette, rouletteFinger, {

      center: new Vec2(width/2, height/2),
      radius: width * 0.9 /2
    });



    canvas.addEventListener("pointerdown",function(e){
      e.preventDefault();
      rouletteFinger.pointerDown(e);
    });

    canvas.addEventListener("pointerup",function(e){
      e.preventDefault();
      rouletteFinger.pointerUp(e);
    });

    canvas.addEventListener("pointermove",function(e){
      e.preventDefault();
      rouletteFinger.pointerMove(e);
    });


    impact(e){
      var now = Date.now();
      console.log("impact Now :" + now);
      roulette.impact(now, 5);


      this.forceHistory = roulette.forceHistory;
    }


    /*
    var diff = 0;

    replay(e){
      first = roulette.firstImpactTime();
      //今を基準として、どれぐらい昔だったか
      diff = first - Date.now() - 1000; 
    }

    {
        var now = Date.now();
        var thatTime = now + diff;
        roulette.calcAngle(thatTime);
        roulette.draw(c);
    }*/

    function drawFrame(ms_from_opened){
      //ms_from_opened  使えない。なぜなら、任意のときにこれを呼べないから

      c.clearRect(0,0,canvas.width, canvas.width);

      roulette.calcCurrentAngle(Date.now());
      rouletteView.draw(c);
    }

    //アニメーションの設定
    (function animationSettings(){
      //関数を設定
      (function() {
        var requestAnimationFrame = 
          window.requestAnimationFrame || 
          window.mozRequestAnimationFrame ||
          window.webkitRequestAnimationFrame || 
          window.msRequestAnimationFrame;

        window.requestAnimationFrame = requestAnimationFrame;
      }());

      //ステップ
      function frame( timestamp ){
        drawFrame( timestamp );
        requestAnimationFrame(frame);
      }
      //一秒後に開始する。何かと読み込むから。それともちょうどいいイベントないかしら
      setTimeout(function(){
        requestAnimationFrame(frame);
      },1000);
    }());

