roulette-canvas
  canvas(name="thecanvas")

  script.
    this.roulette = opts.roulette;
    var canvas = this.thecanvas;

    var c      = canvas.getContext("2d");

    this.on("mount",function(){
      var parent = this.root.parentNode;

      var parentWidth = parent.offsetWidth;
      var windowHeight = window.innerHeight;

      var width = Math.min(windowHeight - 100, parentWidth);
      var height= width;

      canvas.width  = width ;
      canvas.height = height ;



      var opts = {
        center: new Vec2(width* 0.5, height*  0.5),
        radius: width * 0.48
      };

      this.rouletteFinger = new RouletteFinger(roulette, opts);

      this.rouletteView = new RouletteView(roulette, this.rouletteFinger, opts);


      this.rouletteFinger.setEventListener(canvas);

      //サーバーとのコネクションができたら、アニメーション開始
      this.roulette.serverConnected().then(function(){
        console.log("server connected");
        animationSettings();
      });

    });

    impact(e){
      var now = Date.now();
      console.log("impact Now :" + now);
      this.roulette.impact(now, 5);

    }


    /*
    var diff = 0;

    replay(e){
      first = roulette.firstImpactTime();
      //今を基準として、どれぐらい昔だったか
      diff = first - Date.now() - 1000; 
    }

    {
        var now = Date.now();
        var thatTime = now + diff;
        roulette.calcAngle(thatTime);
        roulette.draw(c);
    }*/

    
    this_tag = this;

    function drawFrame(ms_from_opened){
      //ms_from_opened  使えない。なぜなら、任意のときにこれを呼べないから
      
      var roulette = this_tag.roulette;

      roulette.calcCurrentAngleWithBack(Date.now());

      if(roulette.getVelocity() == 0 && !roulette.isChanged()){
        //console.log("うごいてないのでさぼります");
        return;
      }

      c.clearRect(0,0,canvas.width, canvas.width);
      this_tag.rouletteView.draw(c);
    }

    //アニメーションの設定
    function animationSettings(){
      //関数を設定
      (function() {
        var requestAnimationFrame = 
          window.requestAnimationFrame || 
          window.mozRequestAnimationFrame ||
          window.webkitRequestAnimationFrame || 
          window.msRequestAnimationFrame;

        window.requestAnimationFrame = requestAnimationFrame;
      }());

      //ステップ
      function frame( timestamp ){
        drawFrame( timestamp );
        requestAnimationFrame(frame);
      }
      //一秒後に開始する。何かと読み込むから。それともちょうどいいイベントないかしら
      setTimeout(function(){
        requestAnimationFrame(frame);
      },0);
    }

